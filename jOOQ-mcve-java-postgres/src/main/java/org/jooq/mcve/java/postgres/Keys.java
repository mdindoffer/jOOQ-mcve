/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.postgres;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.QOM.ForeignKeyRule;
import org.jooq.mcve.java.postgres.tables.TableA;
import org.jooq.mcve.java.postgres.tables.TableB;
import org.jooq.mcve.java.postgres.tables.records.TableARecord;
import org.jooq.mcve.java.postgres.tables.records.TableBRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * mcve.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TableARecord> TABLE_A_PKEY = Internal.createUniqueKey(TableA.TABLE_A, DSL.name("table_a_pkey"), new TableField[] { TableA.TABLE_A.ID }, true);
    public static final UniqueKey<TableBRecord> TABLE_B_PKEY = Internal.createUniqueKey(TableB.TABLE_B, DSL.name("table_b_pkey"), new TableField[] { TableB.TABLE_B.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TableARecord, TableBRecord> TABLE_A__TABLE_A_TABLE_B_ID_FKEY = Internal.createForeignKey(TableA.TABLE_A, DSL.name("table_a_table_b_id_fkey"), new TableField[] { TableA.TABLE_A.TABLE_B_ID }, Keys.TABLE_B_PKEY, new TableField[] { TableB.TABLE_B.ID }, true, ForeignKeyRule.NO_ACTION, ForeignKeyRule.NO_ACTION);
}
